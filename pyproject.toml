[project]
# Project metadata. Available keys are documented at:
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata
name = "swirl_dynamics"
description = "Machine learning for dynamical systems."
readme = "README.md"
requires-python = ">=3.11"  # Remember to change github pytest workflow.
license = {file = "LICENSE"}
authors = [
  {name = "The Swirl-Dynamics Authors", email="swirl-dynamics@google.com"},
]
classifiers = [  # List of https://pypi.org/classifiers/
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Science/Research",
]
keywords = [
  "dynamical systems", "machine learning", "jax"
]

# pip dependencies of the project
# Installed locally with `pip install -e .`
dependencies = [
  "absl-py",
  "chex",
  "clu",
  "etils",
  "flax",
  "h5py",
  "grain-nightly",
  "gin-config",
  "jax",
  "matplotlib",
  "numpy",
  "optax",
  "orbax-checkpoint==0.5.0",
  "tensorflow",
  "tqdm",
  "xarray",
  "xarray_tensorstore",
]

# `version` is automatically set by flit to use `swirl_dynamics.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/google-research/swirl-dynamics"
repository = "https://github.com/google-research/swirl-dynamics"
# Other: `documentation`, `changelog`

[project.optional-dependencies]
# Development deps (unittest, linting, formating,...)
# Installed through `pip install -e .[dev]`
dev = [
    "pytest",
    "pytest-xdist",
    "pylint>=2.6.0",
    "pyink",
]

[tool.pyink]
# Formatting configuration to follow Google style-guide
line-length = 80
preview = true
pyink-indentation = 2
pyink-use-majority-quotes = true

[build-system]
# Build system specify which backend is used to build/install the project (flit,
# poetry, setuptools,...). All backends are supported by `pip install`
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
# Flit specific options (files to exclude from the PyPI package).
# If using another build backend (setuptools, poetry), you can remove this
# section.
exclude = [
  # Do not release tests files on PyPI
  "**/*_test.py",
]
